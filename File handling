1)What is file handling
ans -  just working the operation like read,write and append operation any kind of file is called file handling.
it is bit slower python compared to other programing languges
 advantage of file handling
i)Versatility - it can perofrm many operation on files like read,write and append or create,rename etc.
ii)flexibility - it is flexible like it can work on all kind of file formates like(txt,csv,bin).
iii)freindly - because it provides a easy to use to interface for users.
iv)cross-platform - it can work in any of the os like(windwos,linux,mac).

sytax for file handling
 f=open(filename,mode)
ii)Some of the mode operation that we can perofrm on files are below.
i) r - we can read the file which is already been exist
ii)w - it can overide the the file and if file not exist it will creat it.
iii)a - append the txt and does not overide the information.
iv)r+ - it can do both read and write but does not overide the file.
v)w+ - it can do bothe write and read but it truncate the file to 0 length and overide it.
vi)a+ - it can read a file and does not overide it.

i)Read operation .
ex -1 : 
1)f=open("abc.txt","w")
f.wirte("Hello good morning")
f.write("how are you")
f.close()
c=open("abc.txt","r")
print(c.read())

2)2nd way of doing it is
with open("abc.txt","r") as f:
    print(f.read())

3)3rd way of reading the file
f=open("abc.txt","r")
for word in f:
    print(word)

ii)Write operation
1)f=open("abc.txt","w")
f.write("What u are planing for weekend")

2)with open("abc.txt","w") as f:
            f.write("write anything")

iii)append operation - it can append infromation to exstining tfile and don't overide
1)f=open("abc.txt","a")
      f.write("This is append operation")

2)To check the fild does exist or not
1st method
import os
file_path="abc.txt"
if os.path.exists(file_path):
    print("file exist")
else:
    print("file not exist")
    
2nd method
import os
file_path="hello.txt"
if os.path.isfile(file_path):
    print("file exists")
else:
    print("file does not exist")

3rd method
from pathlib import Path
file_path=Path("bab.txt")
if file_path.exists():
    print("the file exist")
else:
    print("file not exist")

3)To read and write csv file 
csv reader and writer operation
import csv
data=[["name","age","year"],
      ["deva","23","2001"],
      ["x","22","2002"],
      ["y","30","1995"]]
with open("studen.csv",mode="w",newline="") as file:
    writer=csv.writer(file)
    writer.writerows(data)
    
To read a csv file
import csv
with open("studen.csv",mode="r") as file:
    reader=csv.reader(file)
    header=next(reader) # this method reads the header
    print(header,"\n")
    for word in reader:
        print(word)

4)Handling csv files with dict
import csv
ex-
data = [
    {"Name": "Alice", "Age": 30, "City": "New York"},
    {"Name": "Bob", "Age": 25, "City": "Los Angeles"},
    {"Name": "Charlie", "Age": 35, "City": "Chicago"}
]
with open('studen.csv', mode='w',newline="") as file:
    feildname=["Name","Age","City"]
    csv_reader = csv.DictWriter(file,fieldnames=feildname)
    csv_reader.writeheader()
    csv_reader.writerows(data)
    
5)Dealing with zipfiles
1)write mode operation
import zipfile
with zipfile.ZipFile("abc.zip","w") as zipf:
    zipf.write("hello.txt")
    zipf.write("abc.txt")

2)Read Mode
import zipfile
with zipfile>zipFile("abc.zip","r") as zipf:
       zipf.extractall("extarctedzip")

6)pickling and pickling of objects
pickling - serializing the objects in a file
unpickling - deserializing the objects in a file
to do this we need a module called pickle
i)#pickling
ex- 
import pickle
obj=["yash","prabhas","vijay","deva"]
obj1=["yash","prabhas","vijay","deva"]
with open("file.pkl","wb") as pkl:
   pickle.dump(obj,pkl)
   pickle.dump(obj1,pkl)

#here "wb" is a write binary

ii)desirializing file or unpickling the objects

import pickle
obj=["yash","prabhas","vijay","deva"]
obj1=["yash","prabhas","vijay","deva"]
with open("file.pkl","rb") as pkl:
   a=pickle.load(pkl)
   print(a)
#here "rb" is read binary

7)working with directories
#make a directory using the makedirs() method
import os
os.makedirs("new_folder")

#to change directory use the method chdir()
os.chdir("new_folder")
print("Current working directory:", os.getcwd())  # Prints the current directory

#using listdir() method to list directories and files
print(os.listdir())#if it is current directory
print(os.listdir("new_folder"))#if the directory is diffrent

#to check whether directory exist or not path.isdir() method in os
if os.path.isdir("new_folder"):
    print("Directory exists")
else:
    print("Directory does not exist")



